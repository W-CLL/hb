<?php

namespace app\api\controller;

use app\push\controller\PushEvent;
use app\push\model\Push as PushModel;
use auth\Auth;
use think\Controller;
use think\Loader;
use think\Db;


class Api extends Controller
{
    /*    
    protected $timeout_second=60;//定义接口超时时间
    protected $sign_key='Thinkphp5';//默认签名
    public function _initialize()
    {
       // parent::_initialize(); // TODO: Change the autogenerated stub
       // $this->request=Request::instance();
        if (config('api_auth')){
            $this->check_time($this->request->only(['time']));
            $this->check_sign($this->request->param());
        }
    }
    */
    public function message()
    {
        $auth = new \app\common\controller\Auth();
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Headers: X-Requested-With, Content-Type');
        header('Access-Control-Allow-Methods: GET, PUT, POST');
        $client_key = request()->param('key');
        $data = null;
        //判断是否有这个key存在
        $input = $_POST;
        if (empty($input)) {
            $input = input();
        }
        /*  $code_list = array(["code"=>0,"msg"=>"提交成功！"],["code"=>1,"msg"=>"提交失败，请检查输入内容！"],["code"=>2,"msg"=>"提交失败，请检查接口！"],["code"=>3,"msg"=>"您今日已提交！"]);*/
        if (empty($input) || empty($client_key)) {
            $this->return_msg(200, '提交失败，请检查接口！');
        }
        //判断传入的数据是否有下列字段
        $ary = array('name', 'phone', 'url');
        for ($i = 0; $i < count($ary); $i++) {
            if (!array_key_exists($ary[$i], $input)) {
                $this->return_msg(200, '提交失败，请检查输入内容！');
            }
        }
        //判断电话格式
        if (preg_match("/^1[3456789]{1}\d{9}$/", $input['phone'])) {
            //当天手机号码是否存在
            $todayStart = strtotime(date('Y-m-d 00:00:00'));
            $todayEnd = strtotime(date('Y-m-d 23:59:59'));
            $check_phone_time = Db::table('customer')
                ->where('Phone', $input['phone'])
                ->whereTime('Time', 'between', [$todayStart, $todayEnd])
                ->find();
            if ($check_phone_time) {
                $this->return_msg(200, '您今日已提交！');
            }
        } else {
            $this->return_msg(200, '提交失败，请检查输入内容！');
        }
        //判断所属客户
        $is_client = Db::Table('user_info')->where('Ekey', $client_key)->field('User_Id,Msg_service,Phone,Name')->find();
        if ($is_client) {
            $Phone = $is_client['Phone'];
            $Name = $is_client['Name'];
            $Msg_service = $is_client['Msg_service'];
            $data['Client_Id'] = $is_client['User_Id'];
            if ($Msg_service == "on") {
                $phone = $input['phone'];
                $arr = ["name" => $Name, "phone" => $phone];
                sendMsg($Phone, $arr);
            }
        } else {
            $this->return_msg(200, '提交失败，请检查接口！');
        }
        $rount = input('i_url');
        $SearchUrl = getKeyword2($rount);
        $data['Kw'] = $SearchUrl['kw'];
        $data['Search'] = $SearchUrl['search'];
        $data['Name'] = $input['name'];
        $data['Phone'] = $input['phone'];
        $data['Wx'] = $input['wx'];
        $data['Ip'] = getIp();
        $data['Url'] = $input['url'];
        $data['Content'] = $input['content'];
        $data['Time'] = time();
        $save_msg = Db::table('customer')->insert($data);
        if ($save_msg) {
            try {
                $push = new PushEvent();
                $res = $push->getAdminCache();
                $push->setUser('400' . $is_client['User_Id'] . '009')->setContent('您有新的(留言)！')->push();
                foreach ($res as $k => $v) {
                    $push->setUser('400' . $v['Id'] . '009')->setContent('您有新的(留言)！')->push();
                }
                //推送微信模板消息
                //  $wx_push = new \app\wxapi\controller\Wx();
                //  $wx_push->push_clue(98, array(
                //      'first' => '您有新的留言！',
                //      'name' => $data['Name'],
                //      'phone' => $data['Phone'],
                //      'weixin' => $data['Wx'].' ',
                //      'time' => date('Y-m-d H:i:s'),
                //      'remark' => '详细内容可以登录后台查看',
                //  ));
            } catch (\Exception $e) {
                //出错就写入错误文件
                file_put_contents("PushError.txt", $e, FILE_APPEND);
            }
            $this->return_msg(200, '提交成功！');
        } else {
            $this->return_msg(200, '提交失败,请检查输入内容！');
        }
    }
    public function kf_moblie()
    {

        //对接token跟返回值
        $array = ['cmd' => 'OK', 'token' => 'c375d1326103511096a20abac817859c'];
        //接受内容
        $content = input('content');
        //解码
        $content = urldecode($content);
        try {
            $res = json_decode($content, true);
            if (strlen($res['mobile']) > 1) {
                $data['Moblie'] = $res['mobile'];
                $data['Time'] = time();
                $res = Db::table('kf_moblie')->insert($data);
            }
        } catch (\Exception $e) {
            //出错就写入错误文件
            file_put_contents("error53kf.txt", $e, FILE_APPEND);
            echo  json_encode($array);
        }

        echo json_encode($array);
    }
    public function api()
    {
        $url = getKeyword2("https://so.m.sm.cn/s?q=喜茶加盟&uc_param_str=dnntnwvepffrgibijbprsvdsmelood&from=wh20000&uc_sm=1");
        dump($url);
        die;
    }
    /**
     * @param string $code HTTP CODE
     * @param string $msg 提示信息
     * @param array $data  返回数据
     */
    public function return_msg($code = '200', $msg = '', $data = [])
    {
        header('Content-Type: application/json');
        http_response_code($code);
        $return['code'] = $code;
        $return['msg'] = $msg;
        if (!empty($data)) {
            $return['data'] = $data;
        }
        //输出一条消息，并退出当前脚本。
        exit(json_encode($return, JSON_UNESCAPED_UNICODE));
    }

    /**定义接口时效性
     * 检查接口是否超时
     * @param $arr
     */
    public function check_time($arr)
    {
        if (!isset($arr['time']) || intval($arr['time']) <= 1) {
            $this->return_msg(400, '时间戳错误！');
        }
        if (time() - intval($arr['time']) > $this->timeout_second) {
            $this->return_msg(400, '请求超时！');
        }
    }
    /**
     *构建请求签名
     * @param $param
     * @return  string
     */
    public function buildSign($param)
    {
        unset($param['sign']); //sign字段不需要加入签名算法
        unset($param['time']);
        ksort($param); //键值对的key按照升序排序
        $str = implode('', $param); //请求参数值拼接成字符串
        $sign = md5(md5($str) . $this->sign_key); //执行加密
        return $sign;
    }
    public function check_sign($param)
    {
        if (!isset($param['sign']) || $param['sign']) {
            $this->return_msg(400, '签名不能为空！');
        }
        if ($param['sign'] !== $this->buildSign($param)) {
            $this->return_msg(400, '签名错误！');
        }
    }
    /**
     * 后来加的一个表单
     */
    public function message2()
    {
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Headers: X-Requested-With, Content-Type');
        header('Access-Control-Allow-Methods: GET, PUT, POST');
        if (request()->isPost()) {
            // $data = input();
            $client_key = input('key'); //客户外键
            //姓名 所在地区,省市区详细地址
            $data['Name'] = input('name') . input('s5') . input('s6') . input('s7') . input('s8');
            $data['Phone'] = input('phone'); //手机号
            // var_dump($data);
            // 对以上三条数据进行验证，如果有一个没有的话就不用继续了
            if (empty($client_key)) {
                $this->return_msg(200, '提交失败,key不能为空!');
            }
            $validate = Loader::validate('api/Message');
            if (!$validate->check($data)) {
                $result = $validate->getError();
                // echo "<script>alert('$result');history.back(-1);</script>";
                $this->return_msg(200, '提交失败，' . $result);
            }
            //判断电话格式
            if (preg_match("/^1[3456789]{1}\d{9}$/", $data['Phone'])) {
                //当天手机号码是否存在
                $todayStart = strtotime(date('Y-m-d 00:00:00'));
                $todayEnd = strtotime(date('Y-m-d 23:59:59'));
                $check_phone_time = Db::table('customer')
                    ->where('Phone', $data['Phone'])
                    ->whereTime('Time', 'between', [$todayStart, $todayEnd])
                    ->find();
                if ($check_phone_time) {
                    $this->return_msg(200, '您今日已提交！');
                }
            } else {
                $this->return_msg(200, '提交失败，请检查输入内容1！');
            }
            //判断所属客户
            $is_client = Db::Table('user_info')->where('Ekey', $client_key)->field('User_Id,Msg_service,Phone,Name')->find();
            if ($is_client) {
                $Phone = $is_client['Phone'];
                $Name = $is_client['Name'];
                $Msg_service = $is_client['Msg_service'];
                $data['Client_Id'] = $is_client['User_Id'];
                if ($Msg_service == "on") {
                    $phone = $data['Phone'];
                    $arr = ["name" => $Name, "phone" => $phone];
                    sendMsg($Phone, $arr);
                }
            } else {
                $this->return_msg(200, '提交失败，请检查接口！');
            }

            $rount = input('i_url'); //不知道什么字段就换成url吧
            $SearchUrl = $this->getKeyword2($rount);
            $data['Kw'] = $SearchUrl['kw'];
            $data['Search'] = $SearchUrl['search'];
            $data['Wx'] = input('wx'); //微信号，这个表单里没有的但数据库里有，默认可以为空
            //$data['Ip'] = request()->ip(); //客户访问Ip
            $data['Ip'] = getIp();
            $data['Url'] = input('url'); //客户访问Url 请求页的url
            $data['Time'] = time(); //提交时间
            //留言内容//订购产品的信息//数量
            $data['Content'] =
                '留言：' . input('s11') .
                '产品信息：' . input('wfproduct') .
                '数量：' . input('wfnums') .
                '支付方式:' . input('wfpayment') . //支付方式 cod货到付款，weixin微信,alipay支付宝
                '折扣：' . input('wfpayzk') . //折扣 0.8为八折
                '原价：' . input('wfproup') .
                '折扣后的价格：' . input('wfprice') .
                '页面名称：' . input('wfproname') .
                '客户端：' . input('wfismob');
            //插入数据
            $save_msg = Db::table('customer')->insert($data);
            if ($save_msg) {
                try {
                    $push = new PushEvent();
                    $res = $push->getAdminCache();
                    $push->setUser('400' . $is_client['User_Id'] . '009')->setContent('您有新的推送！')->push();
                    foreach ($res as $k => $v) {
                        $push->setUser('400' . $v['Id'] . '009')->setContent('您有新的推送！')->push();
                    }
                } catch (\Exception $e) {
                    //出错就写入错误文件
                    file_put_contents("PushError.txt", $e, FILE_APPEND);
                }
                $this->return_msg(200, '提交成功！');
            } else {
                $this->return_msg(200, '提交失败,请检查输入内容！');
            }
        }
    }
    function getKeyword2($i_url)
    {
        $url = urldecode(strtolower($i_url));
        file_put_contents("getkw.txt", $url . "\r\n", FILE_APPEND);
        $i_search = array( //各对应的搜索引擎
            "手机百度m"  => ["m.baidu.com", "word|wd"],
            "手机搜狗wap"  => ["wap.sogou.com", "keyword"],
            "手机搜狗m"  => ["m.sogou.com", "keyword"],
            "手机360m"   => ["m.so.com", "q"],
            "手机神马m"      => ["m.sm.cn", "q"],
            "手机神马so.m"      => ["so.m.sm.cn", "q"],
            "手机神马yz.m"      => ["yz.m.sm.cn", "q"],
            "百度"      => ["www.baidu.com", "word|wd"],
            "搜狗"      => ["www.sogou.com", "query"],
            "360"       => ["www.so.com", "q"],
        );
        $url = parse_url($url);
        //url如果不严谨就返回false
        if (!$url) return ['search' => '', 'kw' => ''];
        $hostname = $url['host']; //域名
        $query = $url['query']; //url参数
        $re_value['search'] = null; //返回值["search"=>"搜索引擎","keyword"=>"关键词"]
        $re_value['keyword'] = null;
        //化为数组 获取参数
        $query = explode("&", $query);
        //判断搜索引擎，获取关键词
        foreach ($i_search as $k => $v) {
            if ($hostname == $v[0]) {
                $re_value["search"] = $k;
                //匹配搜索关键字
                foreach ($query as $qk => $qv) {
                    if (preg_match('/(' . $v[1] . ')=/', $qv, $match)) {
                        $re_value["kw"] = str_replace($match[0], '', $qv);
                        break;
                    }
                }
                break;
            }
        }
        return $re_value;
    }
    // 为梧桐平台/营销通线索数据提供post接口
    public function wutong()
    {
        //如果不是post请求就退出
        if (!request()->isPost()) {
            header('HTTP/1.1 400 BadRequest');
            exit();
        }
        //接受数据
        $input = file_get_contents("php://input");
        $requestBody = json_decode($input, true);
        //没有收到数据也退出
        if (!is_array($requestBody) || !is_array($requestBody['data'])) {
            header('HTTP/1.1 400 BadRequest');
            exit();
        }
        // var_dump($requestBody['data']);
        file_put_contents("../runtime/TransErrorLog/PushData.txt", date('Y-d-m H:i:s') . "收到数据\r\n" . $input . "\r\n", FILE_APPEND);
        $d = [
            'site_id' => $requestBody['site_id'], //梧桐站点id
            'page_id' => $requestBody['page_id'], //梧桐页面id
            'formdata' => null
        ];
        // 如果是测试数据也退出
        if ($d['site_id'] == '137855') {
            exit();
        }
        $xingming = '';
        $guishudi = '';
        foreach ($requestBody['data'] as $v) {
            $d['formdata'] .= $v['name'] . ':' . $v['value'] . ' '; //推送内容
            if ($v['name'] == '姓名') {
                $xingming = $v['value'];
            }
            //识别电话归属地
            if ($v['type'] == 'phone' || preg_match("/电话|电话号|电话号码/", $v['name']) || preg_match("/^1[3456789]{1}\d{9}$/", $v['value'])) {
                $guishudi = getGuiShuDi($v['value']);
                $d['formdata'] .= $guishudi;
                $data['Position'] = $guishudi;
                $data['Phone'] = $v['value'];
            }
        }
        //读取url配置
        $urls = json_decode(file_get_contents('./static/json/seturl.json'), true);
        if (isset($urls[$d['site_id']])) {
            $d['formdata'] .= " 落地页链接:" . $urls[$d['site_id']];
        }

        // 根据梧桐站点id找到客户
        $client = Db::table('kw')->where('Kw', 'like', '%' . $d['site_id'] . '%')->where('Client_Id', 'NOT NULL')->find();
        if (!$client) {
            // echo Db::getLastSql();
            file_put_contents("../runtime/TransErrorLog/PushData.txt", date('Y-d-m H:i:s') . "该站点id没有找到对应关键词\r\n" . $input . "\r\n", FILE_APPEND);
            header('HTTP/1.1 400 BadRequest');
            exit();
        }
        $data['Client_Id'] = $client['Client_Id'];
        $data['Kw'] = $client['Name'];
        $data['Content'] = $d['formdata'];
        $data['User_Id'] = 66;
        $data['Cre_time'] = time();
        //入库
        $model = new PushModel;
        $list = $model->add($data);
        // 尝试推送
        try {
            $push = new PushEvent();
            $push->setUser('400' . $client['Client_Id'] . '009')->setContent('您有新的推送！')->push();
            $wx_push = new \app\wxapi\controller\Wx();
            $wx_push->push_clue($client['Client_Id'], array(
                'first' => '您有新的推送！',
                'name' => $xingming,
                'phone' => $data['Phone'],
                'weixin' => '号码归属地：' . $guishudi,
                'time' => date('Y-m-d H:i:s'),
                'remark' => '详细内容可以登录后台查看',
            ));
        } catch (\Exception $e) {
            //出错就写入错误文件
            file_put_contents("PushError.txt", $e, FILE_APPEND);
        }
        return json($list);
    }

    //测试api回传
    public function testapi()
    {
        $auth = new \app\common\controller\Auth();
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Headers: X-Requested-With, Content-Type');
        header('Access-Control-Allow-Methods: GET, PUT, POST');
        $client_key = request()->param('key');
        $data = null;
        //判断是否有这个key存在
        // $input = $_POST;
        $input = input();
        /*  $code_list = array(["code"=>0,"msg"=>"提交成功！"],["code"=>1,"msg"=>"提交失败，请检查输入内容！"],["code"=>2,"msg"=>"提交失败，请检查接口！"],["code"=>3,"msg"=>"您今日已提交！"]);*/
        if (empty($input) || empty($client_key)) {
            $this->return_msg(200, '提交失败，请检查接口！');
        }
        //判断传入的数据是否有下列字段
        $ary = array('name', 'phone', 'url');
        for ($i = 0; $i < count($ary); $i++) {
            if (!array_key_exists($ary[$i], $input)) {
                $this->return_msg(200, '提交失败，请检查输入内容！');
            }
        }
        //判断电话格式
        if (preg_match("/^1[3456789]{1}\d{9}$/", $input['phone'])) {
            //当天手机号码是否存在
            $todayStart = strtotime(date('Y-m-d 00:00:00'));
            $todayEnd = strtotime(date('Y-m-d 23:59:59'));
            $check_phone_time = Db::table('customer')
                ->where('Phone', $input['phone'])
                ->whereTime('Time', 'between', [$todayStart, $todayEnd])
                ->find();
            if ($check_phone_time) {
                $this->return_msg(200, '您今日已提交！');
            }
        } else {
            $this->return_msg(200, '提交失败，请检查输入内容！');
        }
        //判断所属客户
        $is_client = Db::Table('user_info')->where('Ekey', $client_key)->field('User_Id,Msg_service,Phone,Name')->find();
        if ($is_client) {
            $Phone = $is_client['Phone'];
            $Name = $is_client['Name'];
            $Msg_service = $is_client['Msg_service'];
            $data['Client_Id'] = $is_client['User_Id'];
            if ($Msg_service == "on") {
                $phone = $input['phone'];
                $arr = ["name" => $Name, "phone" => $phone];
                sendMsg($Phone, $arr);
            }
        } else {
            $this->return_msg(200, '提交失败，请检查接口！');
        }
        $rount = input('i_url');
        $SearchUrl = getKeyword2($rount);
        $data['Kw'] = $SearchUrl['kw'];
        $data['Search'] = $SearchUrl['search'];
        $data['Name'] = $input['name'];
        $data['Phone'] = $input['phone'];
        $data['Wx'] = $input['wx'];
        $data['Ip'] = getIp();
        $data['Url'] = $input['url'];
        $data['Content'] = $input['content'];
        $data['Time'] = time();
        $save_msg = Db::table('customer')->insert($data);
        if ($save_msg) {
            try {
                $push = new PushEvent();
                $res = $push->getAdminCache();
                $push->setUser('400' . $is_client['User_Id'] . '009')->setContent('您有新的推送！')->push();
                foreach ($res as $k => $v) {
                    $push->setUser('400' . $v['Id'] . '009')->setContent('您有新的推送！')->push();
                }
            } catch (\Exception $e) {
                //出错就写入错误文件
                file_put_contents("PushError.txt", $e, FILE_APPEND);
            }
            //尝试转化
            try {
                if ($this->conv($data['Url'])) {
                    file_put_contents("log/convLog.txt", $data['Url'] . "\r\n", FILE_APPEND);
                };
            } catch (\Exception $e) {
                //出错就写入错误文件
            }
            $this->return_msg(200, '提交成功！');
        } else {
            $this->return_msg(200, '提交失败,请检查输入内容！');
        }
    }
    /**
     * 检查落地页中是否含有clickid,conv有的话就尝试转化，没有的话返回false
     */
    private function conv($url)
    {
        $array = getParams($url);
        if (empty($array['clickid']) || empty($array['conv'])) {
            return false;
        }
        //转化类型 1激活 2下载 3浏览关键词页面 5表单提交 6拨打电话 10提交订单 11购物 12注册 13在线咨询 14其他 15访客数
        $user = ['username' => '北渠515', 'password' => 'ZSLD2018'];
        $data = ['click_id' => $array['clickid'], 'conv_type' => '5', 'conv_name' => '测试2', 'conv_value' => '1'];
        //回传api
        $conv_res = \app\api\controller\WoLong::conversion1($user, $data);
        if ($conv_res) {
            return true;
        }
        return false;
    }


    // 为阿里汇川锦帆建站平台提供post接口
    public function jinfan()
    {
        //如果不是post请求就退出
        if (!request()->isPost()) {
            header('HTTP/1.1 400 BadRequest');
            exit();
        }
        //接受数据
        // $input = file_get_contents("php://input");
        $input = input();
        file_put_contents("./log/jinfanData.txt", date('Y-d-m H:i:s') . "收到数据\r\n" . json_encode($input, JSON_UNESCAPED_UNICODE) . "\r\n", FILE_APPEND);

        // $input = [
        //     'form_id' => 表单ID
        //     'form_url' => 落地页地址
        //     'form_name' => 表单名称
        //     'form_body' => json String, 表单内容，最多5条
        // ];
        // 启用短信验证时
        // if () {
        //     $input['phone'] =  //短信验证电话
        //     $input['userId'] = //账户id
        // }

        //没有收到数据也退出
        if (!$input['form_id']) {
            header('HTTP/1.1 400 BadRequest');
            exit();
        }

        $xingming = '';
        $guishudi = '';
        $formdata = '';
        $form_body = json_decode($input['form_body'], true);
        foreach ($form_body as $v) {
            $formdata .= $v['name'] . ':' . $v['value'] . ' '; //推送内容
            if ($v['name'] == '姓名') {
                $xingming = $v['value'];
            }
            //识别电话归属地
            if (preg_match("/电话|电话号|电话号码|联系方式|手机|手机号/", $v['name']) || $v['type'] == 'phone' || preg_match("/^1[3456789]{1}\d{9}$/", $v['value'])) {
                $guishudi = getGuiShuDi($v['value']);
                $formdata .= $guishudi;
                $data['Phone'] = $v['value'];
            }
        }
        if (isset($input['phone'])) {
            $data['Phone'] = $v['phone'];
            $formdata .= " 短信验证电话:".$data['Phone'];
        }
        //读取url配置
        $formdata .= " 落地页链接:" . $input['form_url'];

        // 根据表单ID找到客户
        $client = Db::table('kw')->where('Kw', 'like', '%' . $input['form_id'] . '%')->where('Client_Id', 'NOT NULL')->find();
        if (!$client) {
            // echo Db::getLastSql();
            file_put_contents("./log/jinfanData.txt", date('Y-d-m H:i:s') . "该表单ID没有找到对应关键词\r\n" . $input['form_id'] . "\r\n", FILE_APPEND);
            header('HTTP/1.1 400 BadRequest');
            exit();
        }
        $data['Client_Id'] = $client['Client_Id'];
        $data['Kw'] = $client['Name'];
        $data['Content'] = $formdata;
        $data['User_Id'] = 66;
        $data['Cre_time'] = time();
        //入库
        $model = new PushModel;
        $list = $model->add($data);
        // 尝试推送
        // try {
        //     $push = new PushEvent();
        //     $push->setUser('400' . $client['Client_Id'] . '009')->setContent('您有新的推送！')->push();
        //     $wx_push = new \app\wxapi\controller\Wx();
        //     $wx_push->push_clue($client['Client_Id'], array(
        //         'first' => '您有新的推送！',
        //         'name' => $xingming,
        //         'phone' => $data['Phone'],
        //         'weixin' => '号码归属地：' . $guishudi,
        //         'time' => date('Y-m-d H:i:s'),
        //         'remark' => '详细内容可以登录后台查看',
        //     ));
        // } catch (\Exception $e) {
        //     //出错就写入错误文件
        //     file_put_contents("./log/jinfanData.txt", $e, FILE_APPEND);
        // }
        return json($list);
    }
}
